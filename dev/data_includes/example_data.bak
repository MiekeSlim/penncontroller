// This tells Ibex you will send the results early
var manualSendResults = true;
var showProgressBar = true;
var shuffleSequence = seq("consent","instructions","start","Practice","preexpt",randomize("experiment"),
                            "send","feedback","confirmation","final");
// rshuffle(startsWith("experiment")),rshuffle(startsWith("experiment"))
PennController.ResetPrefix(null);


var items = [
    /*
    ["consent", "PennController", PennController(
        newVar("test", 0)
            .settings.global(),
        newCanvas("myCanvas", 400, 100)
            .settings.add(0, 0, newText("left", "Waf waf").settings.selector(newSelector("words")) )
            .settings.add(200, 0, newText("right", "Wouf wouf").settings.selector(getSelector("words")) )
            .print()
        ,
        newText("text", getVar("test"))
            .print()
        ,
        newButton("continue", "Continue")
            .print()
            .wait()
            .store("test")
        ,
        getText("text")
            .settings.text( getVar("test").set(v=>v+1) )
        ,
        getButton("continue")
            .wait()
    )]
    ,
    ["consent", "PennController", PennController(
        //newVar("test", "waf"),
        newCanvas("myCanvas", 400, 100)
            .settings.add(0, 0, newText("left", "Waf waf").settings.selector(newSelector("words")) )
            .settings.add(200, 0, newText("right", "Wouf wouf").settings.selector(getSelector("words")) )
            .print()
        ,
        newText("text", "")
            .settings.text( getVar("test").set(v=>v+1) )
            .print()
        ,
        newButton("continue", "Continue")
            .print()
            .wait()
    )]
    ,
    */
    ["consent", "PennController", PennController(
        newHtml("consent", "IbexConsentProlific.html")
            .print()
        ,
        newButton("consent btn", "I consent to take this experiment")
            .print()
            .wait( getHtml("consent").test.complete().failure( getHtml("consent").warn() ) )
    )]
    , 
    ["instructions", "PennController", PennController(
        newHtml("instructions form", "IbexInstructions-Unmarked.html")
            .print()
        ,
        newButton("continue to expt", "Click to start the experiment.")
            .print()
            .wait( getHtml("instructions form").test.complete().failure( getHtml("instructions form").warn() ) )
    )]
	,
   ["start", "PennController", PennController(
        newText("start message", "Let's start with a couple of practice items!")
            .settings.bold() 
			.settings.center()
            .print()	
        ,
        newButton("continue to practice", "Continue to the practice items.")
            .print()
            .wait()			
    )]	
    ,
   ["preexpt", "PennController", PennController(
        newText("pre experiment", "The actual experiment is about to begin. Please turn off any distractions and complete the experiment in one sitting.")
            .settings.bold() // Boldface
			.settings.center()
            .print()			
        ,
        newButton("continue to critical", "Take the experiment.")
            .print()
            .wait()				
    )]	
    ,
    ["send", "__SendResults__", {}]
	,
    ["feedback", "PennController", PennController(
        newHtml("feedback form", "IbexFeedbackPreConfirmationProlific.html")
            .print()
        ,
        newButton("continue to confirm", "Click here to confirm your participation!")
			.settings.bold()
			.print()
            .wait()				
    )]
	,
    ["confirmation", "PennController", PennController(
        newHtml("confirmation form", "IbexConfirmationProlific.html")
            .print()
        ,
        newButton("continue final", "Click to confirm that your answers went through.") // To debriefing, on Sona.
            .print()
            .wait()						
    )]
	,	
// Debriefing (Sona only)
//    ["debriefing", "PennController", PennController(
//       newHtml("confirmation form", "IbexDebriefing.html")
//            .print()
//		,
 //       newButton("continue to confirm", "Click to confirm that your answers went through.")
	//		.settings.bold()
		//	.print()
          //  .wait()
//    )]                     
//,
   ["final", "PennController", PennController(
        newText("final message", "The results were successfully sent to the server. Thanks!")
            .settings.bold() // Boldface
			.settings.center()
            .print()			
    )]
	
];

PennController.GetTable( "datasource_however.txt" ).setLabel("Expt");

PennController.FeedItems( PennController.GetTable( "datasource_however.txt" ).filter("Expt","Practice"),
    (item) => PennController(
	    newText("background", "Imagine that you're at the gym, and you happen to overhear the following bit of someone's conversation:")
			.settings.center()
            .print()		
        ,
		newText("stimuli", item.StimUnmarked)
			.print()
		,
        //	INSTRUCTIONS
	    //,
        newText("question", "To me, this sentence sounds:")
 			.settings.center()
            .print()	
        ,
        newScale("answer", 9)
			.settings.center()		
            .settings.before( newText("labelLeft", "Completely unnatural").settings.bold() )  // Text on the left
            .settings.after( newText("labelRight", "Completely natural").settings.bold() ) // Text on the right		
            .print()
            .wait() // This waits for a selection before validation
		,	
        newButton("validate", "Next question.")
			.settings.center()	
            .print()	
            .wait()
	)
);

PennController.FeedItems( PennController.GetTable( "datasource_however.txt" ).filter("Expt","experiment"),
    (item) => PennController(
	    newText("background", "Imagine that you're at the gym, and you happen to overhear the following bit of someone's conversation:")
			.settings.center()
            .print()		
        ,
		newText("stimuli", item.StimUnmarked)
			.print()
		,
	    //	INSTRUCTIONS
		//,
        newText("question", "To me, this sentence sounds:")
 			.settings.center()
            .print()	
        ,
        newScale("answer", 9)
			.settings.center()		
            .settings.before( newText("labelLeft", "Completely unnatural").settings.bold() )  // Text on the left
            .settings.after( newText("labelRight", "Completely natural").settings.bold() ) // Text on the right		
            .print()
            .wait() // This waits for a selection before validation
		,	
        newButton("validate", "Next question.")
			.settings.center()	
            .print()
            .wait()
	)
);






