results
results$Time.results.were.received
unique(results$Time.results.were.received)
unique(results$Time.results.were.received)[0]
unique(results$Time.results.were.received)[1]
rbind(participant1,participant2)
participant1 <- design[design$group==1,c('Type','Target_pic','Competitor_pic','Condition')]
participant2 <- design[design$group==2,c('Type','Target_pic','Competitor_pic','Condition')]
participant1$Time.results.were.received <- unique(results$Time.results.were.received)[1]
participant2$Time.results.were.received <- unique(results$Time.results.were.received)[2]
rbind(participant1,participant2)
tmp <- merge(ETdata, rbind(participant1,participant2), by=c("Type","Time.results.were.received"))
View(tmp)
ETdata = data.frame()
filesDF <- subset(results, Parameter=="Filename"&Type=="Item-1")
apply(filesDF, 1, function(row) {
data <- read.csv(paste(ETurl,as.character(row[['Value']]),sep=''))
data$Time.results.were.received <- row[['Time.results.were.received']]
ETdata <<- rbind(ETdata,data)
})
ETdata$Type <- paste('Item',ETdata$trial,'-')
ETdata$Type <- paste('Item',ETdata$trial,sep='-')
ETdata$Type <- paste('Item',ETdata$trial,sep='-')
design$Type <- paste('Item',design$item,sep='-')
participant1 <- design[design$group==1,c('Type','Target_pic','Competitor_pic','Condition')]
participant2 <- design[design$group==2,c('Type','Target_pic','Competitor_pic','Condition')]
participant1$Time.results.were.received <- unique(results$Time.results.were.received)[1]
participant2$Time.results.were.received <- unique(results$Time.results.were.received)[2]
tmp <- merge(ETdata, rbind(participant1,participant2), by=c("Type","Time.results.were.received"))
results <- read.pcibex("results.csv")
names(results)
names(results)[1]
names(results)[1] <- 'Participant'
names(results)
read.pcibex <- function(filepath, auto.colnames=TRUE, fun.col=function(col,cols){cols[cols==col]<-paste(col,"Ibex",sep=".");return(cols)}) {
n.cols <- max(count.fields(filepath,sep=",",quote=NULL),na.rm=TRUE)
if (auto.colnames){
cols <- c()
con <- file(filepath, "r")
while ( TRUE ) {
line <- readLines(con, n = 1, warn=FALSE)
if ( length(line) == 0) {
break
}
m <- regmatches(line,regexec("^# (\\d+)\\. (.+)\\.$",line))[[1]]
if (length(m) == 3) {
index <- as.numeric(m[2])
value <- m[3]
if (index < length(cols)){
cols <- c()
}
if (is.function(fun.col)){
cols <- fun.col(value,cols)
}
cols[index] <- value
if (index == n.cols){
break
}
}
}
close(con)
return(read.csv(filepath, comment.char="#", header=FALSE, col.names=cols))
}
else{
return(read.csv(filepath, comment.char="#", header=FALSE, col.names=seq(1:n.cols)))
}
}
require("dplyr")
require("ggplot2")
ETURL = "http://files.lab.florianschwarz.net/ibexfiles/RecordingsFromIbex/EyeTracker.php?experiment="
BIN_DURATION = 100
results <- read.pcibex("results.csv")
names(results)[1] <- 'Participant'
design <- read.csv("clefts.csv",sep="\t")
ETdata = data.frame()
filesDF <- subset(results, Parameter=="Filename"&Type=="Item-1")
apply(filesDF, 1, function(row) {
data <- read.csv(paste(ETURL,as.character(row[['Value']]),sep=''))
data$Participant <- row[['Participant']]
ETdata <<- rbind(ETdata,data)
})
ETdata$Type <- paste('Item',ETdata$trial,sep='-')
design$Type <- paste('Item',design$item,sep='-')
participant1 <- design[design$group==1,c('Type','Target_pic','Competitor_pic','Condition')]
participant2 <- design[design$group==2,c('Type','Target_pic','Competitor_pic','Condition')]
participant1$Participant <- unique(results$Participant)[1]
participant2$Participant <- unique(results$Participant)[2]
ETdata <- merge(ETdata, rbind(participant1,participant2), by=c("Type","Participant"))
ETdata$bin <- BIN_DURATION*floor(ETdata$times/BIN_DURATION)
ETdata <- ETdata %>% group_by(bin) %>% mutate(
top_female=mean(X_topFemaleIA),
bottom_female=mean(X_bottomFemaleIA),
top_male=mean(X_topMaleIA),
bottom_male=mean(X_bottomMaleIA),
)
ggplot(ETdata, aes(x=bin)) +
geom_line(aes(y=mean(top_female), color='red')) +
geom_line(aes(y=mean(bottom_female), color='yellow')) +
geom_line(aes(y=mean(top_male), color='blue')) +
geom_line(aes(y=mean(bottom_male), color='green')) +
facet_grid(Target_pic~.)
ggplot(ETdata, aes(x=bin)) +
geom_line(aes(y=top_female, color='red')) +
geom_line(aes(y=bottom_female, color='yellow')) +
geom_line(aes(y=top_male, color='blue')) +
geom_line(aes(y=bottom_male, color='green')) +
facet_grid(Target_pic~.)
ggplot(ETdata, aes(x=bin)) +
geom_line(aes(y=top_female, color='top_female')) +
geom_line(aes(y=bottom_female, color='bottom_female')) +
geom_line(aes(y=top_male, color='top_male')) +
geom_line(aes(y=bottom_male, color='bottom_male')) +
facet_grid(Target_pic~.)
ETdata$Condition
ggplot(ETdata, aes(x=bin)) +
geom_line(aes(y=top_female, color='top_female')) +
geom_line(aes(y=bottom_female, color='bottom_female')) +
geom_line(aes(y=top_male, color='top_male')) +
geom_line(aes(y=bottom_male, color='bottom_male')) +
facet_grid(Target_pic~.Condition)
ggplot(ETdata, aes(x=bin)) +
geom_line(aes(y=top_female, color='top_female')) +
geom_line(aes(y=bottom_female, color='bottom_female')) +
geom_line(aes(y=top_male, color='top_male')) +
geom_line(aes(y=bottom_male, color='bottom_male')) +
facet_grid(Target_pic~Condition)
unique(ETdata$Condition)
ggplot(subset(ETdata, Condition%in%c("Test","Control")), aes(x=bin)) +
geom_line(aes(y=top_female, color='top_female')) +
geom_line(aes(y=bottom_female, color='bottom_female')) +
geom_line(aes(y=top_male, color='top_male')) +
geom_line(aes(y=bottom_male, color='bottom_male')) +
facet_grid(Target_pic~Condition)
answers <- results[results$Parameter=="Selection", c("Participant","Type","Value")]
View(answers)
names(answers)[3] <- "Selection"
ETdata <- merge(ETdata,answers,by=c("Participant","Type"))
ggplot(subset(ETdata, Condition%in%c("Test","Control")), aes(x=bin)) +
geom_line(aes(y=top_female, color='top_female')) +
geom_line(aes(y=bottom_female, color='bottom_female')) +
geom_line(aes(y=top_male, color='top_male')) +
geom_line(aes(y=bottom_male, color='bottom_male')) +
facet_grid(Target_pic~Selection)
ggplot(subset(ETdata, Condition%in%c("Test","Control")), aes(x=bin)) +
geom_line(aes(y=top_female, color='top_female')) +
geom_line(aes(y=bottom_female, color='bottom_female')) +
geom_line(aes(y=top_male, color='top_male')) +
geom_line(aes(y=bottom_male, color='bottom_male')) +
facet_grid(Condition~Selection)
ETdata_toprint <- ETdata %>% group_by("Participant","Type","bin") %>%
summarize(Condition=unique(Condition),Target=unique(Target_pic),Selection=unique(Selection),
top_female=unique(top_female),bottom_female=unique(bottom_female),
top_male=unique(top_male),bottom_male=unique(bottom_male))
subset(ETdata,Participant=="1590427228"&Type=="Item-1")$Condition
subset(ETdata,Participant=="1590427228"&&Type=="Item-1")$Condition
subset(ETdata,Participant=="1590427228")$Condition
subset(ETdata,Participant=="1590427228"&Type=="Item-1")$Condition
subset(ETdata,Participant=="1590427228"&Type=="Item-10")$Condition
subset(ETdata,Participant=="1590427228"&Type=="Item-2")$Condition
subset(ETdata,Participant=="1590427228"&Type=="Item-1")$Condition
subset(ETdata,Participant=="1590427228"&Type=="Item-7")$Condition
ETdata$Type <- paste('Item',ETdata$trial-1,sep='-') # trial = item+1
subset(ETdata,Participant=="1590427228"&Type=="Item-1")$Condition
ETdata = data.frame()
filesDF <- subset(results, Parameter=="Filename"&Type=="Item-1")
apply(filesDF, 1, function(row) {
data <- read.csv(paste(ETURL,as.character(row[['Value']]),sep=''))
data$Participant <- row[['Participant']]
ETdata <<- rbind(ETdata,data)
})
ETdata$Type <- paste('Item',ETdata$trial-1,sep='-') # trial = item+1
design$Type <- paste('Item',design$item,sep='-')
participant1 <- design[design$group==1,c('Type','Target_pic','Competitor_pic','Condition')]
participant2 <- design[design$group==2,c('Type','Target_pic','Competitor_pic','Condition')]
participant1$Participant <- unique(results$Participant)[1]
participant2$Participant <- unique(results$Participant)[2]
ETdata <- merge(ETdata, rbind(participant1,participant2), by=c("Type","Participant"))
ETdata$bin <- BIN_DURATION*floor(ETdata$times/BIN_DURATION)
ETdata <- ETdata %>% group_by(bin) %>% mutate(
top_female=mean(X_topFemaleIA),
bottom_female=mean(X_bottomFemaleIA),
top_male=mean(X_topMaleIA),
bottom_male=mean(X_bottomMaleIA),
)
answers <- results[results$Parameter=="Selection", c("Participant","Type","Value")]
names(answers)[3] <- "Selection"
ETdata <- merge(ETdata,answers,by=c("Participant","Type"))
ETdata_toprint <- ETdata %>% group_by("Participant","Type","bin") %>%
summarize(Condition=unique(Condition),Target=unique(Target_pic),Selection=unique(Selection),
top_female=unique(top_female),bottom_female=unique(bottom_female),
top_male=unique(top_male),bottom_male=unique(bottom_male))
ggplot(subset(ETdata, Condition%in%c("Test","Control")), aes(x=bin)) +
geom_line(aes(y=top_female, color='top_female')) +
geom_line(aes(y=bottom_female, color='bottom_female')) +
geom_line(aes(y=top_male, color='top_male')) +
geom_line(aes(y=bottom_male, color='bottom_male')) +
facet_grid(Condition~Selection)
ETdata_toprint <- ETdata %>% group_by("Participant","Type","bin") %>%
summarize(Condition=Condition[1],Target=unique(Target_pic),Selection=unique(Selection),
top_female=unique(top_female),bottom_female=unique(bottom_female),
top_male=unique(top_male),bottom_male=unique(bottom_male))
ETdata_toprint <- ETdata %>% group_by("Participant","Type","bin") %>%
summarize(Condition=Condition[1],Target=Target_pic[1],Selection=Selection[1],
top_female=top_female[1],bottom_female=bottom_female[1],
top_male=top_male[1],bottom_male=bottom_male[1])
View(ETdata_toprint)
ETdata_toprint <- ETdata %>% group_by("Participant","Type","bin") %>% filter(row_number()==1)
ETdata = data.frame()
filesDF <- subset(results, Parameter=="Filename"&Type=="Item-1")
apply(filesDF, 1, function(row) {
data <- read.csv(paste(ETURL,as.character(row[['Value']]),sep=''))
data$Participant <- row[['Participant']]
ETdata <<- rbind(ETdata,data)
})
ETdata$Type <- paste('Item',ETdata$trial-1,sep='-') # trial = item+1
design$Type <- paste('Item',design$item,sep='-')
participant1 <- design[design$group==1,c('Type','Target_pic','Competitor_pic','Condition')]
participant2 <- design[design$group==2,c('Type','Target_pic','Competitor_pic','Condition')]
participant1$Participant <- unique(results$Participant)[1]
participant2$Participant <- unique(results$Participant)[2]
View(participant1)
ETdata <- merge(ETdata, rbind(participant1,participant2), by=c("Type","Participant"))
ETdata$bin <- BIN_DURATION*floor(ETdata$times/BIN_DURATION)
ETdata <- ETdata %>% group_by(Participant,Type,bin) %>% mutate(
top_female=mean(X_topFemaleIA),
bottom_female=mean(X_bottomFemaleIA),
top_male=mean(X_topMaleIA),
bottom_male=mean(X_bottomMaleIA),
)
answers <- results[results$Parameter=="Selection", c("Participant","Type","Value")]
View(answers)
names(answers)[3] <- "Selection"
View(answers)
ETdata <- merge(ETdata,answers,by=c("Participant","Type"))
ETdata_toprint <- ETdata %>% group_by("Participant","Type","bin") %>% filter(row_number()==1)
View(ETdata_toprint)
ETdata_toprint <- ETdata %>% group_by(Participant,Type,bin) %>% filter(row_number()==1)
View(ETdata_toprint)
ggplot(subset(ETdata, Condition%in%c("Test","Control")), aes(x=bin)) +
geom_line(aes(y=top_female, color='top_female')) +
geom_line(aes(y=bottom_female, color='bottom_female')) +
geom_line(aes(y=top_male, color='top_male')) +
geom_line(aes(y=bottom_male, color='bottom_male')) +
facet_grid(Condition~Selection)
require("tidyr")
names(ETdata_toprint)
View(gather(ETdata_toprint, focus, gaze, top_female:bottom_male))
ETdata_toprint <- ETdata %>% group_by(Participant,Type,bin) %>% filter(row_number()==1)
ETdata_toprint <- View(gather(ETdata_toprint, focus, gaze, top_female:bottom_male))
ETdata_toprint <- ETdata %>% group_by(Participant,Type,bin) %>% filter(row_number()==1)
ETdata_toprint <- gather(ETdata_toprint, focus, gaze, top_female:bottom_male)
ggplot(subset(ETdata_toprint, Condition%in%c("Test","Control")),
aes(x=bin,y=gaze,color=focus)) + geom_line() +
facet_grid(Condition~Selection)
ggplot(subset(ETdata_toprint, Condition%in%c("Test","Control")),
aes(x=bin,y=mean(gaze),color=focus)) + geom_line() +
facet_grid(Condition~Selection)
ggplot(subset(ETdata_toprint, Condition%in%c("Test","Control")),
aes(x=bin,y=gaze,color=focus)) + geom_line() +
facet_grid(Condition~Selection)
ETdata_toprint
View(ETdata_toprint)
source('~/Dropbox/lab_resources/Scripts/Ibex/Library/WebpackDevelopment/dev/EyeTracking/EyeData.R', echo=TRUE)
ggplot(subset(ETdata_toprint, Condition%in%c("Test","Control")),
aes(x=bin,y=gaze,color=focus,fun.y = "mean")) + geom_line() +
facet_grid(Condition~Selection)
ggplot(subset(ETdata_toprint, Condition%in%c("Test","Control")),
aes(x=bin,y=gaze,color=focus,fun.y = "mean")) + geom_line() +
facet_grid(Condition~.)
ggplot(subset(ETdata_toprint, Condition%in%c("Test","Control")),
aes(x=bin,y=gaze,color=focus,fun.y = "mean")) + geom_line()
subset(ETdata_toprint, Condition=="Test"&focus=="bottom_female")
subset(ETdata_toprint, Condition=="Test"&focus=="bottom_female"&bin==0)
subset(ETdata_toprint, Condition=="Test"&focus=="bottom_female"&bin==0)$gaze
ETdata_toprint$Participant
unique(ETdata_toprint$Participant)
length(unique(ETdata_toprint$Type))
length(subset(ETdata, Condition=="Test"&bin==0)$bin)
length(subset(ETdata, Condition=="Test"&bin==0&focus=="bottom_female")$bin)
length(subset(ETdata, Condition=="Test"&bin==0&Focus=="bottom_female")$bin)
length(subset(ETdata_toprint, Condition=="Test"&bin==0&Focus=="bottom_female")$bin)
length(subset(ETdata_toprint, Condition=="Test"&bin==0&focus=="bottom_female")$bin)
length(subset(ETdata_toprint, Condition=="Test"&bin==0&focus=="bottom_female")$gaze)
mean(subset(ETdata_toprint, Condition=="Test"&bin==0&focus=="bottom_female")$gaze)
mean(subset(ETdata_toprint, Condition=="Test"&bin==1&focus=="bottom_female")$gaze)
mean(subset(ETdata_toprint, Condition=="Test"&bin==100&focus=="bottom_female")$gaze)
mean(subset(ETdata_toprint, Condition=="Test"&bin==200&focus=="bottom_female")$gaze)
mean(subset(ETdata_toprint, Condition=="Test"&bin==400&focus=="bottom_female")$gaze)
with(subset(ETdata_toprint, Condition%in%c("Test","Control"), table(bin,gaze))
)
with(subset(ETdata_toprint, Condition%in%c("Test","Control")), table(bin,gaze))
with(subset(ETdata_toprint, Condition%in%c("Test","Control")), table(bin,focus))
with(subset(ETdata_toprint, Condition%in%c("Test","Control")), table(bin,focus,Condition))
ETdata_toprint <- subset(ETdata_toprint, Condition%in%c("Test","Control"))
ETdata_toprint$Condition <- factor(ETdata_toprint$Condition)
ETdata_toprint$Condition
ggplot(ETdata_toprint, aes(x=bin,y=gaze,color=focus,fun.y = "mean")) +
geom_line()
ETdata_toprint$gaze
ggplot(subset(ETdata_toprint, focus=="bottom_female"), aes(x=bin,y=gaze,fun.y = "mean")) +
geom_line()
subset(ETdata_toprint, focus=="bottom_female"&bin==0)$gaze
mean(subset(ETdata_toprint, focus=="bottom_female"&bin==0)$gaze)
mean(subset(ETdata_toprint, focus=="bottom_female"&bin==200)$gaze)
mean(subset(ETdata_toprint, focus=="bottom_female"&bin==400)$gaze)
ggplot(subset(ETdata_toprint, focus=="bottom_female"), aes(x=bin,y=mean(gaze))) +
geom_line()
ggplot(subset(ETdata_toprint, focus=="bottom_female"), aes(x=bin,y=gaze)) +
geom_line(stat="summary",fun.y="mean")
ggplot(ETdata_toprint, aes(x=bin,y=gaze,color=focus)) +
geom_line(stat="summary",fun.y="mean")
ggplot(ETdata_toprint, aes(x=bin,y=gaze,color=focus)) +
geom_line(stat="summary",fun.y="mean") +
facet_grid(.~Condition)
ggplot(ETdata_toprint, aes(x=bin,y=gaze,color=focus)) +
geom_line(stat="summary",fun.y="mean") +
facet_grid(.~Selection)
ggplot(ETdata_toprint, aes(x=bin,y=gaze,color=focus)) +
geom_line(stat="summary",fun.y="mean") +
facet_grid(Selection~.)
BIN_DURATION = 100
results <- read.pcibex("results.csv")
names(results)[1] <- 'Participant'
design <- read.csv("clefts.csv",sep="\t")
ETdata = data.frame()
filesDF <- subset(results, Parameter=="Filename"&Type=="Item-1")
apply(filesDF, 1, function(row) {
data <- read.csv(paste(ETURL,as.character(row[['Value']]),sep=''))
data$Participant <- row[['Participant']]
ETdata <<- rbind(ETdata,data)
})
ETdata$Type <- paste('Item',ETdata$trial-1,sep='-') # trial = item+1
design$Type <- paste('Item',design$item,sep='-')
participant1 <- design[design$group==1,c('Type','Target_pic','Competitor_pic','Condition')]
participant2 <- design[design$group==2,c('Type','Target_pic','Competitor_pic','Condition')]
participant1$Participant <- unique(results$Participant)[1]
participant2$Participant <- unique(results$Participant)[2]
ETdata <- merge(ETdata, rbind(participant1,participant2), by=c("Type","Participant"))
ETdata$bin <- BIN_DURATION*floor(ETdata$times/BIN_DURATION)
ETdata <- ETdata %>% group_by(Participant,Type,bin) %>% mutate(
top_female=mean(X_topFemaleIA),
bottom_female=mean(X_bottomFemaleIA),
top_male=mean(X_topMaleIA),
bottom_male=mean(X_bottomMaleIA),
)
answers <- results[results$Parameter=="Selection", c("Participant","Type","Value")]
names(answers)[3] <- "Selection"
ETdata <- merge(ETdata,answers,by=c("Participant","Type"))
ETdata_toprint <- ETdata %>% group_by(Participant,Type,bin) %>% filter(row_number()==1)
ETdata_toprint <- gather(ETdata_toprint, focus, gaze, top_female:bottom_male)
ETdata_toprint <- subset(ETdata_toprint, Condition%in%c("Test","Control"))
ETdata_toprint$Condition <- factor(ETdata_toprint$Condition)
ggplot(ETdata_toprint, aes(x=bin,y=gaze,color=focus)) +
geom_line(stat="summary",fun.y="mean") +
facet_grid(Selection~.)
# Imports
read.pcibex <- function(filepath, auto.colnames=TRUE, fun.col=function(col,cols){cols[cols==col]<-paste(col,"Ibex",sep=".");return(cols)}) {
n.cols <- max(count.fields(filepath,sep=",",quote=NULL),na.rm=TRUE)
if (auto.colnames){
cols <- c()
con <- file(filepath, "r")
while ( TRUE ) {
line <- readLines(con, n = 1, warn=FALSE)
if ( length(line) == 0) {
break
}
m <- regmatches(line,regexec("^# (\\d+)\\. (.+)\\.$",line))[[1]]
if (length(m) == 3) {
index <- as.numeric(m[2])
value <- m[3]
if (index < length(cols)){
cols <- c()
}
if (is.function(fun.col)){
cols <- fun.col(value,cols)
}
cols[index] <- value
if (index == n.cols){
break
}
}
}
close(con)
return(read.csv(filepath, comment.char="#", header=FALSE, col.names=cols))
}
else{
return(read.csv(filepath, comment.char="#", header=FALSE, col.names=seq(1:n.cols)))
}
}
require("dplyr")
require("ggplot2")
require("tidyr")
# The URL where the data is stored
ETURL = "http://files.lab.florianschwarz.net/ibexfiles/RecordingsFromIbex/EyeTracker.php?experiment="
# Time-window to bin the looks
BIN_DURATION = 100
# We'll use Reception time to identify individual sessions
results <- read.pcibex("results.csv")
names(results)[1] <- 'Participant'
# Didn't log info to results file, will retrieve from design table
design <- read.csv("clefts.csv",sep="\t")
# Read ET data file for each session and append output to ETdata
ETdata = data.frame()
filesDF <- subset(results, Parameter=="Filename"&Type=="Item-1")
apply(filesDF, 1, function(row) {
data <- read.csv(paste(ETURL,as.character(row[['Value']]),sep=''))
data$Participant <- row[['Participant']]
ETdata <<- rbind(ETdata,data)
})
# Because trials weren't randomized, design table's item == trial# - 1
ETdata$Type <- paste('Item',ETdata$trial-1,sep='-') # trial = item+1
design$Type <- paste('Item',design$item,sep='-')
# Should've logged group, but I know I ran first session as group 1, and second as group 2
participant1 <- design[design$group==1,c('Type','Target_pic','Competitor_pic','Condition')]
participant2 <- design[design$group==2,c('Type','Target_pic','Competitor_pic','Condition')]
participant1$Participant <- unique(results$Participant)[1]
participant2$Participant <- unique(results$Participant)[2]
ETdata <- merge(ETdata, rbind(participant1,participant2), by=c("Type","Participant"))
# Bin the data
ETdata$bin <- BIN_DURATION*floor(ETdata$times/BIN_DURATION)
ETdata <- ETdata %>% group_by(Participant,Type,bin) %>% mutate(
top_female=mean(X_topFemaleIA),
bottom_female=mean(X_bottomFemaleIA),
top_male=mean(X_topMaleIA),
bottom_male=mean(X_bottomMaleIA),
)
# Add final choice to ETdata
answers <- results[results$Parameter=="Selection", c("Participant","Type","Value")]
names(answers)[3] <- "Selection"
ETdata <- merge(ETdata,answers,by=c("Participant","Type"))
# Some transformations before plotting
#  - only keep first row for each bin per participant+trial
ETdata_toplot <- ETdata %>% group_by(Participant,Type,bin) %>% filter(row_number()==1)
#  - from wide to long (see http://www.cookbook-r.com/Manipulating_data/Converting_data_between_wide_and_long_format/)
ETdata_toplot <- gather(ETdata_toplot, focus, gaze, top_female:bottom_male)
#  - we'll only look at Test and Control
# ETdata_toplot <- subset(ETdata_toplot, Condition%in%c("Test","Control"))
# ETdata_toplot$Condition <- factor(ETdata_toplot$Condition)
ggplot(ETdata_toplot, aes(x=bin,y=gaze,color=focus)) +
geom_line(stat="summary",fun.y="mean") +
facet_grid(Selection~.)
ggplot(ETdata_toplot, aes(x=bin,y=gaze,color=focus)) +
geom_line(stat="summary",fun.y="mean") +
facet_grid(Selection~.)
View(results)
# Add final choice to ETdata
answers <- results[results$Parameter=="Selection", c("Participant","Item.number","Value")]
names(answers)
# The URL where the data is stored
ETURL = "http://files.lab.florianschwarz.net/ibexfiles/RecordingsFromIbex/EyeTracker.php?experiment="
# Time-window to bin the looks
BIN_DURATION = 100
# We'll use Reception time to identify individual sessions
results <- read.pcibex("results.csv")
names(results)[1] <- 'Participant'
# Read ET data file for each session and append output to ETdata
ETdata = data.frame()
filesDF <- subset(results, Parameter=="Filename"&Type=="Item-1")
apply(filesDF, 1, function(row) {
data <- read.csv(paste(ETURL,as.character(row[['Value']]),sep=''))
data$Participant <- row[['Participant']]
ETdata <<- rbind(ETdata,data)
})
# Bin the data
ETdata$bin <- BIN_DURATION*floor(ETdata$times/BIN_DURATION)
ETdata <- ETdata %>% group_by(Participant,Type,bin) %>% mutate(
top_female=mean(X_topFemaleIA),
bottom_female=mean(X_bottomFemaleIA),
top_male=mean(X_topMaleIA),
bottom_male=mean(X_bottomMaleIA),
)
# Add final choice to ETdata
answers <- results[results$Parameter=="Selection", c("Participant","Item.number","Value")]
names(answers) <- c("Participant", "trial", "Selection")
ETdata <- merge(ETdata,answers,by=c("Participant","trial"))
# Some transformations before plotting
#  - only keep first row for each bin per participant+trial
ETdata_toplot <- ETdata %>% group_by(Participant,trial,bin) %>% filter(row_number()==1)
#  - from wide to long (see http://www.cookbook-r.com/Manipulating_data/Converting_data_between_wide_and_long_format/)
ETdata_toplot <- gather(ETdata_toplot, focus, gaze, top_female:bottom_male)
# Plot the results
ggplot(ETdata_toplot, aes(x=bin,y=gaze,color=focus)) +
geom_line(stat="summary",fun.y="mean") +
facet_grid(Selection~.)
ETdata = data.frame()
filesDF <- subset(results, Parameter=="Filename"&Type=="Item-1")
apply(filesDF, 1, function(row) {
data <- read.csv(paste(ETURL,as.character(row[['Value']]),sep=''))
data$Participant <- row[['Participant']]
ETdata <<- rbind(ETdata,data)
})
# Bin the data
ETdata$bin <- BIN_DURATION*floor(ETdata$times/BIN_DURATION)
ETdata <- ETdata %>% group_by(Participant,trial,bin) %>% mutate(
top_female=mean(X_topFemaleIA),
bottom_female=mean(X_bottomFemaleIA),
top_male=mean(X_topMaleIA),
bottom_male=mean(X_bottomMaleIA),
)
# Add final choice to ETdata
answers <- results[results$Parameter=="Selection", c("Participant","Item.number","Value")]
names(answers) <- c("Participant", "trial", "Selection")
ETdata <- merge(ETdata,answers,by=c("Participant","trial"))
# Some transformations before plotting
#  - only keep first row for each bin per participant+trial
ETdata_toplot <- ETdata %>% group_by(Participant,trial,bin) %>% filter(row_number()==1)
#  - from wide to long (see http://www.cookbook-r.com/Manipulating_data/Converting_data_between_wide_and_long_format/)
ETdata_toplot <- gather(ETdata_toplot, focus, gaze, top_female:bottom_male)
# Plot the results
ggplot(ETdata_toplot, aes(x=bin,y=gaze,color=focus)) +
geom_line(stat="summary",fun.y="mean") +
facet_grid(Selection~.)
